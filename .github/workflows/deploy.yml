name: Manual Deploy
run-name: Manual deployment to npmjs üì¶
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate semantic version tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚ùå Tag '$TAG' is not a valid semantic version (e.g., v1.0.0)"
            exit 1
          fi
          echo "‚úÖ Valid semantic version: $TAG"
          echo "RELEASE_TAG=$TAG" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.com"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${RELEASE_TAG#v}
          if [[ "$PACKAGE_VERSION" != "$TAG_VERSION" ]]; then
            echo "‚ùå Package version ($PACKAGE_VERSION) doesn't match tag version ($TAG_VERSION)"
            exit 1
          fi
          echo "‚úÖ Package version matches tag: $PACKAGE_VERSION"

      - name: Build project
        run: pnpm build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "Release ${{ env.RELEASE_TAG }}"
          body: |
            ## Release ${{ env.RELEASE_TAG }}
            
            Manual release triggered by tag push.
            
            **Package**: @rnwonder/adonis-autoswagger@${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Success notification
        run: |
          echo "üéâ Successfully published ${{ env.RELEASE_TAG }} to npm!"
          echo "üì¶ Package: @rnwonder/adonis-autoswagger@${{ env.RELEASE_TAG }}"
